//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.3
//     from Assets/Scripts/Player/PlayerAction.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerAction : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerAction()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerAction"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""cd532b0a-48a6-4525-837f-9d8b446830ce"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""9278418e-7c8f-4ed0-9c1d-305c8e66c389"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Card0"",
                    ""type"": ""Button"",
                    ""id"": ""397d9696-ca01-4e23-b5f5-e28357a9a021"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Card1"",
                    ""type"": ""Button"",
                    ""id"": ""126e0c11-cb31-4eb6-93e5-d8cec45d995f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Card2"",
                    ""type"": ""Button"",
                    ""id"": ""10b7e9f6-94fb-429d-835b-406ec328622c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Card3"",
                    ""type"": ""Button"",
                    ""id"": ""bc6bf143-276d-4263-bb76-4b409661c585"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Card4"",
                    ""type"": ""Button"",
                    ""id"": ""680ccfe9-17f0-4416-9556-989cb05a3569"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SpawnNewCard"",
                    ""type"": ""Button"",
                    ""id"": ""b77d0df3-3b5d-472e-a506-c4ca4ce5cb7c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchToCardView"",
                    ""type"": ""Button"",
                    ""id"": ""9aa5092e-fb73-4dd8-9e28-8c78d541d658"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Arrows"",
                    ""id"": ""024659ac-2051-4c00-8367-a789e962a586"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""1e7a66a8-2cb2-4df7-94dd-0e38dca7726a"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""457cbdcf-da89-4684-bc9b-c0c02ee6354e"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""6c72ef16-9e24-42a3-892b-7bb948e2834c"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""28c92607-5fcf-42f8-affe-5d604d7ec105"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""502ed6b6-6044-4883-920b-68b093fcf3b8"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""eaedd824-26eb-4f57-9c3e-a8204d3f84fc"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""5e428ce2-cf4b-47b2-be98-9fc8d907244c"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""444e7679-c66a-4aa6-b31f-05f2d15c402a"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""536231a0-60a9-4a00-83ff-3d3d3d61f7d2"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""74683281-1993-45d3-a56f-cceb4536d01b"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Card0"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""de0fe3d5-5b90-4c39-b5cc-51114aa4a802"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Card1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a1805fd3-a66a-4ae8-a9ed-9c7ec645d0da"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Card2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e13b7ea9-0505-426e-ac4e-d5a8a5d6acee"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Card3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""03677846-a5a8-445e-9df5-18f71731b413"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Card4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""39c89a93-66ca-458e-9370-db135398b931"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpawnNewCard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0b68db76-728b-43ea-800d-4bd73797246c"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchToCardView"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Cards"",
            ""id"": ""eb83e53c-c46f-4105-b42a-b61a204a858c"",
            ""actions"": [
                {
                    ""name"": ""Card0"",
                    ""type"": ""Button"",
                    ""id"": ""fd9c52fb-4889-4c86-b045-8b8da6294dbe"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Card1"",
                    ""type"": ""Button"",
                    ""id"": ""cea0991e-a031-4b68-9fbe-127e0ecb82bf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Card2"",
                    ""type"": ""Button"",
                    ""id"": ""e64dbfb7-29b6-4f73-87e1-d9f28b1c43e9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Card3"",
                    ""type"": ""Button"",
                    ""id"": ""2987f2a5-e84e-482a-868f-e046d5fc0f16"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Card4"",
                    ""type"": ""Button"",
                    ""id"": ""e78d7570-4abd-426c-a311-dca192a5c062"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchToNormalView"",
                    ""type"": ""Button"",
                    ""id"": ""f5737349-2956-4627-a41c-7333a9bf6946"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""fc8a5166-b4c7-4621-a86b-f09c0a7fe67f"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Card1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1278ffc3-aee5-46aa-be3d-37d5e5aeda5a"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Card2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e88eb015-5ca4-4ed1-9472-286723d28752"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Card3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a24335cd-234a-4195-ba49-e6eeeddbf98d"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Card4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""53a4962a-4ced-4062-8d2b-9710d1d7a3a0"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Card0"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6fbb4e49-2790-4ecd-96ed-cd205467907a"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchToNormalView"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Controller"",
            ""bindingGroup"": ""Controller"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_Card0 = m_Player.FindAction("Card0", throwIfNotFound: true);
        m_Player_Card1 = m_Player.FindAction("Card1", throwIfNotFound: true);
        m_Player_Card2 = m_Player.FindAction("Card2", throwIfNotFound: true);
        m_Player_Card3 = m_Player.FindAction("Card3", throwIfNotFound: true);
        m_Player_Card4 = m_Player.FindAction("Card4", throwIfNotFound: true);
        m_Player_SpawnNewCard = m_Player.FindAction("SpawnNewCard", throwIfNotFound: true);
        m_Player_SwitchToCardView = m_Player.FindAction("SwitchToCardView", throwIfNotFound: true);
        // Cards
        m_Cards = asset.FindActionMap("Cards", throwIfNotFound: true);
        m_Cards_Card0 = m_Cards.FindAction("Card0", throwIfNotFound: true);
        m_Cards_Card1 = m_Cards.FindAction("Card1", throwIfNotFound: true);
        m_Cards_Card2 = m_Cards.FindAction("Card2", throwIfNotFound: true);
        m_Cards_Card3 = m_Cards.FindAction("Card3", throwIfNotFound: true);
        m_Cards_Card4 = m_Cards.FindAction("Card4", throwIfNotFound: true);
        m_Cards_SwitchToNormalView = m_Cards.FindAction("SwitchToNormalView", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_Card0;
    private readonly InputAction m_Player_Card1;
    private readonly InputAction m_Player_Card2;
    private readonly InputAction m_Player_Card3;
    private readonly InputAction m_Player_Card4;
    private readonly InputAction m_Player_SpawnNewCard;
    private readonly InputAction m_Player_SwitchToCardView;
    public struct PlayerActions
    {
        private @PlayerAction m_Wrapper;
        public PlayerActions(@PlayerAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @Card0 => m_Wrapper.m_Player_Card0;
        public InputAction @Card1 => m_Wrapper.m_Player_Card1;
        public InputAction @Card2 => m_Wrapper.m_Player_Card2;
        public InputAction @Card3 => m_Wrapper.m_Player_Card3;
        public InputAction @Card4 => m_Wrapper.m_Player_Card4;
        public InputAction @SpawnNewCard => m_Wrapper.m_Player_SpawnNewCard;
        public InputAction @SwitchToCardView => m_Wrapper.m_Player_SwitchToCardView;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Card0.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCard0;
                @Card0.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCard0;
                @Card0.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCard0;
                @Card1.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCard1;
                @Card1.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCard1;
                @Card1.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCard1;
                @Card2.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCard2;
                @Card2.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCard2;
                @Card2.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCard2;
                @Card3.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCard3;
                @Card3.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCard3;
                @Card3.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCard3;
                @Card4.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCard4;
                @Card4.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCard4;
                @Card4.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCard4;
                @SpawnNewCard.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSpawnNewCard;
                @SpawnNewCard.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSpawnNewCard;
                @SpawnNewCard.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSpawnNewCard;
                @SwitchToCardView.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSwitchToCardView;
                @SwitchToCardView.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSwitchToCardView;
                @SwitchToCardView.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSwitchToCardView;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Card0.started += instance.OnCard0;
                @Card0.performed += instance.OnCard0;
                @Card0.canceled += instance.OnCard0;
                @Card1.started += instance.OnCard1;
                @Card1.performed += instance.OnCard1;
                @Card1.canceled += instance.OnCard1;
                @Card2.started += instance.OnCard2;
                @Card2.performed += instance.OnCard2;
                @Card2.canceled += instance.OnCard2;
                @Card3.started += instance.OnCard3;
                @Card3.performed += instance.OnCard3;
                @Card3.canceled += instance.OnCard3;
                @Card4.started += instance.OnCard4;
                @Card4.performed += instance.OnCard4;
                @Card4.canceled += instance.OnCard4;
                @SpawnNewCard.started += instance.OnSpawnNewCard;
                @SpawnNewCard.performed += instance.OnSpawnNewCard;
                @SpawnNewCard.canceled += instance.OnSpawnNewCard;
                @SwitchToCardView.started += instance.OnSwitchToCardView;
                @SwitchToCardView.performed += instance.OnSwitchToCardView;
                @SwitchToCardView.canceled += instance.OnSwitchToCardView;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // Cards
    private readonly InputActionMap m_Cards;
    private ICardsActions m_CardsActionsCallbackInterface;
    private readonly InputAction m_Cards_Card0;
    private readonly InputAction m_Cards_Card1;
    private readonly InputAction m_Cards_Card2;
    private readonly InputAction m_Cards_Card3;
    private readonly InputAction m_Cards_Card4;
    private readonly InputAction m_Cards_SwitchToNormalView;
    public struct CardsActions
    {
        private @PlayerAction m_Wrapper;
        public CardsActions(@PlayerAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @Card0 => m_Wrapper.m_Cards_Card0;
        public InputAction @Card1 => m_Wrapper.m_Cards_Card1;
        public InputAction @Card2 => m_Wrapper.m_Cards_Card2;
        public InputAction @Card3 => m_Wrapper.m_Cards_Card3;
        public InputAction @Card4 => m_Wrapper.m_Cards_Card4;
        public InputAction @SwitchToNormalView => m_Wrapper.m_Cards_SwitchToNormalView;
        public InputActionMap Get() { return m_Wrapper.m_Cards; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CardsActions set) { return set.Get(); }
        public void SetCallbacks(ICardsActions instance)
        {
            if (m_Wrapper.m_CardsActionsCallbackInterface != null)
            {
                @Card0.started -= m_Wrapper.m_CardsActionsCallbackInterface.OnCard0;
                @Card0.performed -= m_Wrapper.m_CardsActionsCallbackInterface.OnCard0;
                @Card0.canceled -= m_Wrapper.m_CardsActionsCallbackInterface.OnCard0;
                @Card1.started -= m_Wrapper.m_CardsActionsCallbackInterface.OnCard1;
                @Card1.performed -= m_Wrapper.m_CardsActionsCallbackInterface.OnCard1;
                @Card1.canceled -= m_Wrapper.m_CardsActionsCallbackInterface.OnCard1;
                @Card2.started -= m_Wrapper.m_CardsActionsCallbackInterface.OnCard2;
                @Card2.performed -= m_Wrapper.m_CardsActionsCallbackInterface.OnCard2;
                @Card2.canceled -= m_Wrapper.m_CardsActionsCallbackInterface.OnCard2;
                @Card3.started -= m_Wrapper.m_CardsActionsCallbackInterface.OnCard3;
                @Card3.performed -= m_Wrapper.m_CardsActionsCallbackInterface.OnCard3;
                @Card3.canceled -= m_Wrapper.m_CardsActionsCallbackInterface.OnCard3;
                @Card4.started -= m_Wrapper.m_CardsActionsCallbackInterface.OnCard4;
                @Card4.performed -= m_Wrapper.m_CardsActionsCallbackInterface.OnCard4;
                @Card4.canceled -= m_Wrapper.m_CardsActionsCallbackInterface.OnCard4;
                @SwitchToNormalView.started -= m_Wrapper.m_CardsActionsCallbackInterface.OnSwitchToNormalView;
                @SwitchToNormalView.performed -= m_Wrapper.m_CardsActionsCallbackInterface.OnSwitchToNormalView;
                @SwitchToNormalView.canceled -= m_Wrapper.m_CardsActionsCallbackInterface.OnSwitchToNormalView;
            }
            m_Wrapper.m_CardsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Card0.started += instance.OnCard0;
                @Card0.performed += instance.OnCard0;
                @Card0.canceled += instance.OnCard0;
                @Card1.started += instance.OnCard1;
                @Card1.performed += instance.OnCard1;
                @Card1.canceled += instance.OnCard1;
                @Card2.started += instance.OnCard2;
                @Card2.performed += instance.OnCard2;
                @Card2.canceled += instance.OnCard2;
                @Card3.started += instance.OnCard3;
                @Card3.performed += instance.OnCard3;
                @Card3.canceled += instance.OnCard3;
                @Card4.started += instance.OnCard4;
                @Card4.performed += instance.OnCard4;
                @Card4.canceled += instance.OnCard4;
                @SwitchToNormalView.started += instance.OnSwitchToNormalView;
                @SwitchToNormalView.performed += instance.OnSwitchToNormalView;
                @SwitchToNormalView.canceled += instance.OnSwitchToNormalView;
            }
        }
    }
    public CardsActions @Cards => new CardsActions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    private int m_ControllerSchemeIndex = -1;
    public InputControlScheme ControllerScheme
    {
        get
        {
            if (m_ControllerSchemeIndex == -1) m_ControllerSchemeIndex = asset.FindControlSchemeIndex("Controller");
            return asset.controlSchemes[m_ControllerSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnCard0(InputAction.CallbackContext context);
        void OnCard1(InputAction.CallbackContext context);
        void OnCard2(InputAction.CallbackContext context);
        void OnCard3(InputAction.CallbackContext context);
        void OnCard4(InputAction.CallbackContext context);
        void OnSpawnNewCard(InputAction.CallbackContext context);
        void OnSwitchToCardView(InputAction.CallbackContext context);
    }
    public interface ICardsActions
    {
        void OnCard0(InputAction.CallbackContext context);
        void OnCard1(InputAction.CallbackContext context);
        void OnCard2(InputAction.CallbackContext context);
        void OnCard3(InputAction.CallbackContext context);
        void OnCard4(InputAction.CallbackContext context);
        void OnSwitchToNormalView(InputAction.CallbackContext context);
    }
}
